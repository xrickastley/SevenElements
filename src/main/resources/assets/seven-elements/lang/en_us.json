{
	"text.autoconfig.seven-elements.title": "Seven Elements Config",

	"text.autoconfig.seven-elements.category.rendering": "Rendering",
	"text.autoconfig.seven-elements.option.rendering.text": "Text Options",
	"text.autoconfig.seven-elements.option.rendering.text.globalTextScale": "Global Text Scale",
	"text.autoconfig.seven-elements.option.rendering.text.globalTextScale.@Tooltip": "Controls the scale of all Seven Elements Text Elements (Elemental Reactions and Damage Text)",
	"text.autoconfig.seven-elements.option.rendering.text.showDamageText": "Show Damage Text",
	"text.autoconfig.seven-elements.option.rendering.text.normalDMGScale": "Normal DMG Scale",
	"text.autoconfig.seven-elements.option.rendering.text.critDMGScale": "CRIT DMG Scale",
	"text.autoconfig.seven-elements.option.rendering.text.displayTooltipAfterInfusion": "Display tooltip after infusion",
	"text.autoconfig.seven-elements.option.rendering.text.displayTooltipAfterInfusion.@Tooltip": "Whether the item's tooltip is displayed after infusing it in the Infusion Table.",
	"text.autoconfig.seven-elements.option.rendering.text.tooltipDisplayTicks": "Tooltip display ticks",
	"text.autoconfig.seven-elements.option.rendering.text.tooltipDisplayTicks.@Tooltip": "Controls the amount of ticks an item's tooltip is displayed for in the Infusion Table after infusing it in the Infusion Table.",
	"text.autoconfig.seven-elements.option.rendering.elements": "Element Options",
	"text.autoconfig.seven-elements.option.rendering.elements.sphereResolution": "Crystallize Shield Resolution",
	"text.autoconfig.seven-elements.option.rendering.elements.sphereResolution.@Tooltip": "Controls the amount of triangles generated for the Crystallize Shield. This setting may be tuned down for more performance.",
	"text.autoconfig.seven-elements.option.rendering.elements.effectRenderType": "Effect Render Type",
	"text.autoconfig.seven-elements.option.rendering.elements.effectRenderType.@Tooltip[0]": "Controls the rendering of various Elemental effects",
	"text.autoconfig.seven-elements.option.rendering.elements.effectRenderType.@Tooltip[1]": "NONE - Renders no elemental effects",
	"text.autoconfig.seven-elements.option.rendering.elements.effectRenderType.@Tooltip[2]": "SPECIAL - Renders special elemental effects (Frozen, Quicken, etc.)",
	"text.autoconfig.seven-elements.option.rendering.elements.effectRenderType.@Tooltip[3]": "ALL - Renders all elemental effects",

	"text.autoconfig.seven-elements.category.developer": "Developer",
	"text.autoconfig.seven-elements.option.developer.displayElementalGauges": "Display Elemental Gauges",
	"text.autoconfig.seven-elements.option.developer.displayElementalGauges.@Tooltip": "Whether Elemental Gauge Unit values are displayed beside the entity.",
	"text.autoconfig.seven-elements.option.developer.displayGaugeRuler": "Display Gauge Ruler",
	"text.autoconfig.seven-elements.option.developer.displayGaugeRuler.@Tooltip": "Whether Elemental Gauges render with a ruler.",
	"text.autoconfig.seven-elements.option.developer.genshinDamageLim": "Genshin Damage Limit",
	"text.autoconfig.seven-elements.option.developer.genshinDamageLim.@Tooltip": "Whether damage text adheres to the Genshin Damage Limit of 20,000,000.",
	"text.autoconfig.seven-elements.option.developer.commafyDamage": "Commafy Damage",
	"text.autoconfig.seven-elements.option.developer.commafyDamage.@Tooltip": "Whether damage is rendered with commas when possible.",

	"entity.seven-elements.dendro_core": "Dendro Core",
	"entity.seven-elements.crystallize_shard": "Crystallize Shard",

	"effect.seven-elements.cryo": "Cryo",
	"effect.seven-elements.frozen": "Frozen",
	"effect.seven-elements.superconduct": "Superconduct",

	"death.attack.burning": "%1$s burned to death",
	"death.attack.burning.item": "%1$s was burned to death by %2$s while wielding %3$s",
	"death.attack.burning.player": "%1$s was burned to death whilst trying to escape %2$s",

	"death.attack.dendro_core": "%1$s experienced the power of nature",
	"death.attack.dendro_core.player": "%1$s experienced the power of nature whilst trying to escape %2$s",
	"death.attack.dendro_core.item": "%1$s experienced the power of nature thanks to %2$s while wielding %3$s",

	"death.attack.electro-charged": "%1$s was shocked to death",
	"death.attack.electro-charged.item": "%1$s was shocked to death by %2$s while wielding %3$s",
	"death.attack.electro-charged.player": "%1$s was shocked to death whilst trying to escape %2$s",

	"death.attack.overloaded": "%1$s was blown up in an electrifying explosion",
	"death.attack.overloaded.item": "%1$s was blown up in an electrifying explosion by %2$s using %3$s",
	"death.attack.overloaded.player": "%1$s was blown up in an electrifying explosion whilst trying to escape %2$s",

	"death.attack.shatter": "%1$s shattered while being frozen",
	"death.attack.shatter.item": "%1$s shattered while being frozen due to %2$s while wielding %3$s",
	"death.attack.shatter.player": "%1$s shattered while being frozen whilst trying to escape %2$s",

	"death.attack.superconduct": "%1$s experienced freezing cold conduction",
	"death.attack.superconduct.item": "%1$s experienced freezing cold conduction due to %2$s while wielding %3$s",
	"death.attack.superconduct.player": "%1$s experienced freezing cold conduction whilst trying to escape %2$s",

	"death.attack.swirl": "%1$s was swept away by the wind",
	"death.attack.swirl.item": "%1$s was swept away by the wind due to %2$s while wielding %3$s",
	"death.attack.swirl.player": "%1$s was swept away by the wind whilst trying to escape %2$s",

	"commands.bossbar.set.entity.success": "Custom bossbar %s now is now linked to %s",
	"commands.bossbar.get.entity.success": "Custom bossbar %s is linked to entity %s",
	"commands.bossbar.get.entity.none": "Custom bossbar %s is not linked to any entities",

	"commands.seven-elements.damage.success": "Applied %s damage infused with %s (%s) to %s",
	
	"commands.element.failed.entity": "%s is not a valid entity for this command, a living entity is required",
	"commands.element.failed.none": "%s already does not have the %s element applied",
	"commands.element.apply": "Applied %s element to %s",
	"commands.element.apply.reactions": "Applied %s element to %s, triggered reaction(s): %s",
	"commands.element.remove": "Removed the %s element from %s",
	"commands.element.reduce": "Reduced the %s element by %s",
	"commands.element.query.multiple.none": "%s has no applied elements",
	"commands.element.query.multiple.success": "Applied element(s) on %s: %s",
	"commands.element.query.single.none": "%s has no applied %s element",
	"commands.element.query.single.success": "%s has %s",
	"commands.element.infuse.failed.incompatible": "%s's item cannot be infused with an element",
	"commands.element.infuse.apply.success": "Applied elemental infusion %s (%s) to %s's item",
	"commands.element.infuse.remove.none": "%s's item already has no elemental infusion!",
	"commands.element.infuse.remove.success": "Removed elemental infusion from %s's item",

	"item.seven-elements.components.infusion.infusion": "Elemental Infusion: ",
	"item.seven-elements.components.infusion.tag": "ICD Tag: ",
	"item.seven-elements.components.infusion.type": "ICD Type: ",
	
	"formats.seven-elements.icd_type": "%ss/%s hits",
	"formats.seven-elements.elemental_application.gauge_unit": "%sU %s",
	"formats.seven-elements.elemental_application.duration": "%sU %s/%ss",
	"formats.seven-elements.elemental_application.duration.timer": "%sU %s (%ss left)",

	"seven-elements.element.physical": "Physical",
	"seven-elements.element.pyro": "Pyro",
	"seven-elements.element.hydro": "Hydro",
	"seven-elements.element.anemo": "Anemo",
	"seven-elements.element.electro": "Electro",
	"seven-elements.element.dendro": "Dendro",
	"seven-elements.element.cryo": "Cryo",
	"seven-elements.element.geo": "Geo",
	"seven-elements.element.freeze": "Freeze",
	"seven-elements.element.burning": "Burning",
	"seven-elements.element.quicken": "Quicken",

	"reaction.seven-elements.melt": "Melt",
	"reaction.seven-elements.vaporize": "Vaporize",
	"reaction.seven-elements.frozen": "Frozen",
	"reaction.seven-elements.electro-charged": "Electro-Charged",
	"reaction.seven-elements.overloaded": "Overloaded",
	"reaction.seven-elements.superconduct": "Superconduct",
	"reaction.seven-elements.shatter": "Shatter",
	"reaction.seven-elements.quicken": "Quicken",
	"reaction.seven-elements.spread": "Spread",
	"reaction.seven-elements.aggravate": "Aggravate",
	"reaction.seven-elements.burning": "Burning",
	"reaction.seven-elements.bloom": "Bloom",
	"reaction.seven-elements.swirl": "Swirl",
	"reaction.seven-elements.crystallize": "Crystallize",
	"reaction.seven-elements.hyperbloom": "Hyperbloom",
	"reaction.seven-elements.burgeon": "Burgeon",

	"container.seven-elements.infusion_table": "Infusion Table",
	"container.seven-elements.infusion_table.infuse": "Infuse",
	"container.seven-elements.infusion_table.fail_by_gamerule": "A mysterious force is preventing you from interacting with the Infusion Table!",

	"block.seven-elements.infusion_table": "Infusion Table",
	
	"item.seven-elements.infusion_table": "Infusion Table",

	"tag.item.seven-elements.heavy_weapon": "Heavy Weapon",

	"gamerule.doElements": "(Seven Elements) Do elements",
	"gamerule.levelMultiplier": "(Seven Elements) Level Multiplier",
	"gamerule.levelMultiplier.description": "How strong the effects of Elemental Reactions are",
	"gamerule.overloadedBlockDestruction": "(Seven Elements) Overloaded destroys blocks",
	"gamerule.overloadedBlockDestruction.description": "Whether the explosion caused by the Overloaded reaction destroys blocks",
	"gamerule.pyroFromFire": "(Seven Elements) Pyro from fire",
	"gamerule.pyroFromFire.description": "Whether the Pyro element should be applied on entities that are in or on fire.",
	"gamerule.hydroFromWater": "(Seven Elements) Hydro from water",
	"gamerule.hydroFromWater.description": "Whether the Hydro element should be applied on entities in water.",
	"gamerule.electroFromLightning": "(Seven Elements) Electro from Lightning",
	"gamerule.electroFromLightning.description": "Whether the Electro element should be applied on entities struck by Lightning Bolts",
	"gamerule.infusionTable": "(Seven Elements) Enable Infusion Table",
	"gamerule.infusionTable.description": "Whether the Infusion Table is enabled.",

	"advancements.seven-elements.root.elemental_awakening": "Elemental Awakening",
	"advancements.seven-elements.root.elemental_awakening.description": "Craft or place an Infusion Table",
	"advancements.seven-elements.root.power_of_the_elements": "Power of the Elements!",
	"advancements.seven-elements.root.power_of_the_elements.description": "Infuse an item with an element."
} 