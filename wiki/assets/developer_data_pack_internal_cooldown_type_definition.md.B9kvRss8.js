import{_ as a,c as t,o as n,ah as i}from"./chunks/framework.DGDRXwgj.js";const k=JSON.parse('{"title":"Internal Cooldown Type definition","description":"","frontmatter":{"outline":2,"prev":false},"headers":[],"relativePath":"developer/data_pack/internal_cooldown_type_definition.md","filePath":"developer/data_pack/internal_cooldown_type_definition.md","lastUpdated":1759331139000}'),s={name:"developer/data_pack/internal_cooldown_type_definition.md"};function o(l,e,r,p,d,c){return n(),t("div",null,[...e[0]||(e[0]=[i(`<h1 id="internal-cooldown-type-definition" tabindex="-1">Internal Cooldown Type definition <a class="header-anchor" href="#internal-cooldown-type-definition" aria-label="Permalink to “Internal Cooldown Type definition”">​</a></h1><p><a href="./../../guide/elements/internal_cooldown.html">Internal Cooldown Types</a> are stored as <a href="https://minecraft.wiki/w/JSON" target="_blank" rel="noreferrer">JSON</a> files within a <a href="https://minecraft.wiki/w/Data_pack" target="_blank" rel="noreferrer">data pack</a> in the path <code>data/&lt;namespace&gt;/internal_cooldowns</code>.</p><p>This excludes the default types: <code>seven-elements:default</code> and <code>seven-elements:none</code>, which <strong>cannot</strong> be overriden by data-driven means.</p><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>Before you create one, consider trying <code>seven-elements:default</code> for your use case. After all, elements should be applied strategically, not &quot;spammingly&quot;.</p></div><h2 id="json-format" tabindex="-1">JSON format <a class="header-anchor" href="#json-format" aria-label="Permalink to “JSON format”">​</a></h2><div class="treeview"><ul><li><span title="NBT Compound / JSON Object" class="nbt-sprite sprite" style="background-position:-48px -16px;background-size:64px auto;height:16px;width:16px;"></span>: The root object. <ul><li><span title="Int" class="nbt-sprite sprite" style="background-position:-48px 0px;background-size:64px auto;height:16px;width:16px;"></span> <b>gauge_sequence</b>: Value between 0 and 2,147,483,647 (inclusive) — Controls the amount of time in ticks before an Element can be applied again. </li><li><span title="Int" class="nbt-sprite sprite" style="background-position:-48px 0px;background-size:64px auto;height:16px;width:16px;"></span> <b>reset_interval</b>: Value between 0 and 2,147,483,647 (inclusive) — Controls the amount of hits needed before an Element can be applied <b>within</b> the reset interval&#39;s timer. </li></ul></li></ul></div><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to “Examples”">​</a></h3><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">{</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#0451A5;">	&quot;gauge_sequence&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">: </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">3</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">,</span></span>
<span class="line"><span style="--shiki-dark:#9CDCFE;--shiki-light:#0451A5;">	&quot;reset_interval&quot;</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">: </span><span style="--shiki-dark:#B5CEA8;--shiki-light:#098658;">50</span></span>
<span class="line"><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">}</span></span></code></pre></div><p>This example creates an Internal Cooldown Type with a <code>gauge_sequence</code> of <code>3</code> hits and a <code>reset_interval</code> of <code>50</code> ticks.</p>`,9)])])}const u=a(s,[["render",o]]);export{k as __pageData,u as default};
