import{_ as i,c as a,o as s,ah as t}from"./chunks/framework.DGDRXwgj.js";const k=JSON.parse('{"title":"/damage","description":"","frontmatter":{"outline":false,"next":false,"prev":{"text":"Commands","link":"/guide/misc/commands"}},"headers":[],"relativePath":"guide/misc/commands/damage.md","filePath":"guide/misc/commands/damage.md","lastUpdated":1759331139000}'),l={name:"guide/misc/commands/damage.md"};function n(d,e,o,c,h,p){return s(),a("div",null,[...e[0]||(e[0]=[t('<h1 id="damage" tabindex="-1"><code>/damage</code> <a class="header-anchor" href="#damage" aria-label="Permalink to “/damage”">​</a></h1><p><sup>    &lt; <a href="./../commands.html">Commands</a></sup></p><p>The <code>/damage</code> command can be used to apply a set amount of damage to specified entities.</p><p>Original: <a href="https://minecraft.wiki/Commands/damage" target="_blank" rel="noreferrer"><code>/damage</code> (Minecraft Wiki)</a></p><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>This command is originally a Minecraft command, and has been modified by <strong>Seven Elements</strong> to add extra functionality to it. You can find the new subcommands below.</p></div><h3 id="syntax" tabindex="-1">Syntax: <a class="header-anchor" href="#syntax" aria-label="Permalink to “Syntax:”">​</a></h3><div class="language-mcfunction"><button title="Copy Code" class="copy"></button><span class="lang">mcfunction</span><pre class="shiki shiki-themes dark-plus light-plus" style="--shiki-dark:#D4D4D4;--shiki-light:#000000;--shiki-dark-bg:#1E1E1E;--shiki-light-bg:#FFFFFF;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-dark:#C586C0;--shiki-light:#AF00DB;">damage</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> &lt;target&gt; &lt;amount&gt; </span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">[</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">damageType</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">]</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> [element</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> &lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">element</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt; &lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">gaugeUnits</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt; &lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">tag</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt; &lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">type</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">]</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> [by</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> &lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">entity</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">]</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;"> [from</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;"> &lt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">cause</span><span style="--shiki-dark:#D4D4D4;--shiki-light:#000000;">&gt;</span><span style="--shiki-dark:#9CDCFE;--shiki-light:#001080;">]</span></span></code></pre></div><p>Damages the specified target with the specified damage type infused with the specified element.</p><ul><li><code>&lt;entity&gt;</code> being a target selector, username, or UUID; can only select one at a time. <ul><li>(e.g: <code>@a[limit = 1]</code>, <code>@p</code>, <code>_xRickAstley</code>, <code>b1b981b6-4081-4abe-afd8-e79269c6a339</code>)</li></ul></li><li><code>&lt;amount&gt;</code> being a float (a decimal or whole number) greater than or equal to 0.0. <ul><li>(e.g: <code>1</code>, <code>1.5</code>, <code>4</code>)</li></ul></li><li><code>&lt;element&gt;</code> being the name of an element. <ul><li>(e.g: <code>pyro</code>, <code>HYDRO</code>, <code>eLeCtRo</code>)</li></ul></li><li><code>&lt;gaugeUnits&gt;</code> being a double (a decimal or whole number) <ul><li>(e.g: <code>1</code>, <code>1.5</code>, <code>4</code>)</li></ul></li><li><code>&lt;tag&gt;</code> being a valid <a href="./../../elements/internal_cooldown.html">Internal Cooldown Tag</a> string, defaults to the special <code>none</code> Internal Cooldown Tag. <ul><li>(e.g: <code>damage</code>, <code>seven-elements:infusion</code>, <code>&quot;Custom Infusion Tag&quot;</code>, <code>&quot;&quot;</code> (none))</li></ul></li><li><code>&lt;type&gt;</code> being a valid <a href="./../../elements/internal_cooldown.html">Internal Cooldown Type</a> id, defaults to <code>seven-elements:default</code>. <ul><li>(e.g. <code>seven-elements:default</code>, <code>seven-elements:none</code>)</li></ul></li></ul>',9)])])}const r=i(l,[["render",n]]);export{k as __pageData,r as default};
